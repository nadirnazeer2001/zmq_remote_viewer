<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1021</width>
    <height>483</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">/* mainwindow_dark_elegant.qss */

QMainWindow {
    background-color: #1e1e1e; /* Very dark almost black background for the main window */
    font-family: &quot;Segoe UI&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; /* Modern, clean font */
    font-size: 14px;
    color: #e0e0e0; /* Light gray for general text */
    border-radius: 12px; /* Overall rounded corners for the main window itself (if borderless) */
}

/* Header/Title Area (if you have one, e.g., a custom title bar or QLabel) */
QLabel#headerTitleLabel { /* Assuming you have a QLabel for &quot;Live Camera Output&quot; */
    color: #f0f0f0; /* Brighter white for titles */
    font-size: 20px;
    font-weight: 600; /* Semi-bold */
    padding-left: 20px;
    padding-top: 15px;
    padding-bottom: 10px;
}

/* Style for QLabels (e.g., &quot;IP Address&quot;, &quot;Port Number&quot;) */
QLabel {
    color: #b0b0b0; /* Softer light gray for input labels */
    font-weight: 400; /* Regular font weight */
    padding: 5px 0px; /* Padding for spacing */
}

/* Style for QLineEdits (text boxes) */
QLineEdit {
    background-color: #303030; /* Dark gray background for input fields */
    border: 1px solid #505050; /* Subtle dark border */
    border-radius: 6px; /* Slightly more rounded than the previous iteration */
    padding: 10px 12px; /* Generous padding inside the text box */
    color: #e0e0e0; /* Light text color */
    selection-background-color: #007bff; /* A clean blue for selection */
    selection-color: #ffffff;
    min-height: 28px; /* Ensure a minimum height for consistency */
}

QLineEdit:focus {
    border: 1px solid #007bff; /* Blue border on focus for a subtle highlight */
    background-color: #383838; /* Slightly lighter on focus */
    outline: none;
}

/* Style for QPushButton (&quot;Fetch Stream&quot;) */
QPushButton {
    background-color: #444444; /* Dark gray for the button */
    color: #e0e0e0; /* Light text */
    border: 1px solid #606060; /* A visible but subtle border */
    border-radius: 6px; /* Rounded corners matching text boxes */
    padding: 10px 25px; /* Generous padding */
    font-weight: 500; /* Medium weight */
    min-width: 120px; /* Ensure a good minimum width */
    icon-size: 20px 20px; /* If you add an icon */
}

QPushButton:hover {
    background-color: #555555; /* Slightly lighter gray on hover */
    border: 1px solid #707070;
}

QPushButton:pressed {
    background-color: #333333; /* Darker when pressed */
    border: 1px solid #505050;
    padding-top: 11px; /* Slight push effect */
    padding-bottom: 9px;
}

/* Style for the camera output display area (the large dark rectangle) */
#cameraOutputLabel { /* Make sure this matches the objectName of your camera display widget */
    background-color: #282828; /* Darker background for the display area */
    border: 1px solid #404040; /* Subtle border */
    border-radius: 8px; /* Rounded corners for the display area */
    margin: 15px 0px 0px 20px; /* Adjusted margins for spacing from left panel */
    color: #aaaaaa; /* Lighter gray for any placeholder text */
    qproperty-alignment: AlignCenter;
    /* Consider using a QFrame with a QVBoxLayout inside if you're loading
       actual video, then apply this style to the QFrame's objectName */
}

/* The left panel area (containing inputs and button) */
#leftPanelWidget { /* Assuming you group your inputs and button into a QWidget named 'leftPanelWidget' */
    background-color: #282828; /* A shade darker than the main window background */
    border-radius: 10px; /* Slightly rounded corners for the panel */
    padding: 20px; /* Internal padding */
}

/* Top-left back button or icon (if you have one) */
QPushButton#backButton { /* Assuming a QPushButton with objectName 'backButton' */
    background-color: transparent; /* No background */
    border: none;
    color: #e0e0e0; /* Light icon color */
    font-size: 24px; /* Adjust if using text for an arrow */
    padding: 5px;
    margin-top: 10px;
    margin-left: 10px;
}
QPushButton#backButton:hover {
    background-color: #3a3a3a; /* Subtle hover effect */
    border-radius: 5px;
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QLabel" name="label">
    <property name="geometry">
     <rect>
      <x>40</x>
      <y>100</y>
      <width>281</width>
      <height>31</height>
     </rect>
    </property>
    <property name="text">
     <string>ip address</string>
    </property>
   </widget>
   <widget class="QPushButton" name="fetchstream">
    <property name="geometry">
     <rect>
      <x>40</x>
      <y>290</y>
      <width>301</width>
      <height>41</height>
     </rect>
    </property>
    <property name="text">
     <string>Fetch stream</string>
    </property>
   </widget>
   <widget class="QLabel" name="status">
    <property name="geometry">
     <rect>
      <x>140</x>
      <y>350</y>
      <width>111</width>
      <height>31</height>
     </rect>
    </property>
    <property name="text">
     <string>status :</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_3">
    <property name="geometry">
     <rect>
      <x>40</x>
      <y>180</y>
      <width>281</width>
      <height>31</height>
     </rect>
    </property>
    <property name="text">
     <string>Port</string>
    </property>
   </widget>
   <widget class="QLineEdit" name="ipaddress">
    <property name="geometry">
     <rect>
      <x>40</x>
      <y>130</y>
      <width>301</width>
      <height>50</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;ui version=&quot;4.0&quot;&gt;
 &lt;widget name=&quot;__qt_fake_top_level&quot;&gt;
  &lt;widget class=&quot;QLineEdit&quot; name=&quot;ipaddress&quot;&gt;
   &lt;property name=&quot;geometry&quot;&gt;
    &lt;rect&gt;
     &lt;x&gt;40&lt;/x&gt;
     &lt;y&gt;130&lt;/y&gt;
     &lt;width&gt;301&lt;/width&gt;
     &lt;height&gt;50&lt;/height&gt;
    &lt;/rect&gt;
   &lt;/property&gt;
  &lt;/widget&gt;
 &lt;/widget&gt;
 &lt;resources/&gt;
&lt;/ui&gt;
</string>
    </property>
   </widget>
   <widget class="QLineEdit" name="port">
    <property name="geometry">
     <rect>
      <x>40</x>
      <y>210</y>
      <width>301</width>
      <height>50</height>
     </rect>
    </property>
   </widget>
   <widget class="QLabel" name="camera">
    <property name="geometry">
     <rect>
      <x>450</x>
      <y>40</y>
      <width>491</width>
      <height>351</height>
     </rect>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1021</width>
     <height>22</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
